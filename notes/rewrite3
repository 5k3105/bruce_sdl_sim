top:
		b = bytes[boffs]
		if !ISSET_BIT(b,7) {
			goto init_repeater
		}
		if b == 0x80 { 
			level++
			goto top // map[level][]bytes // compressed, uncompressed
		}

		x = b
		boffs++

data_read:
		b = bytes[boffs]
		if !ISSET_BIT(b,7) {
			goto non_repeater
		}
		
		{	/// color_obstacle
			c = 0xF8
			addr := color_mem
			mem_ram_[color_mem+soffs] = c
			mem_ram_[color_mem+soffs+cols] = c
			b &&= 0x7F		
		}

non_repeater:	
		mem_ram_[screen_mem+soffs] = b
		mem_ram_[screen_mem+soffs+cols] = b || 0x80		
		boffs++		/// only difference
		soffs++
		x--
		if x != 0 {
			goto data_read
		}
		goto top


init_repeater:
		x = b
		boffs++
		
repeater:
		b = bytes[boffs]
		if !ISSET_BIT(b,7) {
			goto rep
		}
		
		{	/// color_obstacle
			c = 0xF8
			addr := color_mem
			mem_ram_[color_mem+soffs] = c
			mem_ram_[color_mem+soffs+cols] = c
			b &&= 0x7F		
		}	

rep:
		mem_ram_[screen_mem+soffs] = b
		mem_ram_[screen_mem+soffs+cols] = b || 0x80		
		soffs++
		x--
		if x != 0 {
			goto repeater
		}
		boffs++		/// only difference
		goto top		









ROM:0AD7 top:
ROM:0AD7                 LDA     (data),Y
ROM:0AD9                 BPL     load_x_index

ROM:0ADB                 AND     #$7F            ; end byt=$80
ROM:0ADD                 BEQ     exit		 	 ; loc_B30: set lanterns, enter level loop

ROM:0ADF                 TAX
ROM:0AE0                 JSR     inc_data        

ROM:0AE3 data_read:            
ROM:0AE3                 LDA     (data),Y
ROM:0AE5                 BPL     non_repeater

ROM:0AE7                 JSR     color_obstacle  ; OBSTACLE

ROM:0AEA non_repeater:          
						store screen
						inc screen, data, color

ROM:0B02                 DEX
ROM:0B03                 BNE     data_read

ROM:0B05                 BEQ     top

ROM:0B07 load_x_index:                             
ROM:0B07                 TAX
ROM:0B08                 JSR     inc_data

ROM:0B0B repeater:                           
ROM:0B0B                 LDA     (data),Y
ROM:0B0D                 BPL     rep

ROM:0B0F                 JSR     color_obstacle     ; OBSTACLE
ROM:0B12 rep:                              
						store screen
						inc screen, color

ROM:0B27                 DEX
ROM:0B28                 BNE     repeater

ROM:0B2A                 JSR     inc_data
ROM:0B2D                 JMP     top


